var express = require('express');
var app = express();
var projects = [
	{
		title: 		'AgriScore',
		image:		'static/agriscore.png',
		content: 	'AgriScore is a a simple tool for calculating player scores for the Agricola board game. It uses React library with ES6. The UI has been done using Material UI library with some MaterializeCSS typographic definitions. AgriScore uses Flexbox Grid for responsive frid management. Webpack is used for building.',
		source: 	'https://github.com/sevesalm/AgriScore',
	},
	{
		title: 		'bugfree.fi',
		image:		'static/bugfree.png',
		content: 	"Bugfree (this site) runs on a VPS provided by Scaleway. Currently it is running Ubuntu 16.10 (Yakkety Yak). Nginx is used as a web server and as a reverse proxy. Most web applications are running on a Node.js server. All the static content is served by the Nginx server. The site is written in JavaScript using Express framework with Pug template engine. It's using Bootstrap for responsive design."
	},
	{
		title: 		'ssChat',
		image:		'static/ssChat.png',
		content: 	"ssChat is a simple web based chat application/service. It runs on Node.js and uses socket.io for handling real-time communication between clients and the server. Currently it features basic instant messaging, public chat room creation and private channels between two users. It also supports Unicode emojis and avatar image uploads using custom Dropzone UI. ssChat uses MongoDB for managing rooms, messages and users.",
		source: 	'https://github.com/sevesalm/ssChat',
		demo:		'http://chat.bugfree.fi'
	},
	{
		title: 		'ssRay',
		image:		'static/dragons.jpg',
		content: 	"ssRay is an unbiased Monte Carlo path tracing renderer capable of producing very realistic looking images. Images are generated by shooting billions of rays into the scene and letting them bounce based on physical laws. ssRay is written in C++ and currently runs only on Linux. ssRay supports diffuse materials as well as glass and mirror like materials with varying IOR or roughness. No SDL support is implemented.",
		source:		'https://github.com/sevesalm/ssRay'
	},	
	{
		title: 		'orbiNav',
		image:		'static/orbiNav.png',
		content: 	"orbiNav is my solution to \"Reaktor Orbital Challenge\" &#8212; a nice little programming puzzle by <a href=\"https://www.reaktor.com\">Reaktor</a>. The program fetches CSV data containing satellite coordinates, calculates the shortest route using Dijkstra's algorithm and displays the result using Three.js 3D library.",
		source:		'https://github.com/sevesalm/orbiNav',
		demo:		'https://orbinav.herokuapp.com'
	}
]

app.use(express.static(__dirname))

app.set('view engine', 'pug');

app.get('/', function(req, res) {
    res.render('main');
});

app.get('/projects', function(req, res) {
    res.render('projects', {projects});
});

app.get('/profile', function(req, res) {
    res.render('profile');
});

var port = 3001;
app.listen(port, function() {
	console.log('Bugfree: listening on localhost:%d', port);
});
